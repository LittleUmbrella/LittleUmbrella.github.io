<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <meta charset="utf-8">
  <title>Mini Calendar</title>  
  <link rel="stylesheet" href="css/date.css" type="text/css" />
</head>
<body>

	<div style="margin: auto; width: 90%; background-color: white; height: 500px; padding: 20px">
  <table>
  <thead>
    <tr>
      <th data-bind="click: add_week" colspan="7"> Contractors Calendar </th>
    </tr>
  </thead>
  <tbody>
	<tr>
      <th data-bind="click: prev_week" colspan="7"> Up </th>		
	</tr>
	
	<!-- ko foreach: weeks -->
	<tr>
		<!-- ko foreach: $data.days -->
      <td data-bind='attr: { "class": month_name, "className": month_name }'>
		<p data-bind="text: day_number"></p>
		<p data-bind="text: day_name"></p>
		<p data-bind="text: month_year"></p>
	  </td>
		<!-- /ko -->
	</tr>
	<!-- /ko -->

	<th data-bind="click: next_week" colspan="7"> Down </th>
  </tbody>
</table>
		</div>
	
	<script type="text/javascript" src="js/external/ko.js"></script>
	<script type="text/javascript" src="js/external/date.js"></script>
	<script type="text/javascript">

	    function Week(Days) {
	        var self = this;
	        self.days = ko.observable(Days);

	    }

	    function Day(day, index, row) {
	        var self = this;
	        self.day = ko.observable(day);
	        self.index = ko.observable(index);
	        self.row = ko.observable(row);

	        // TO STRING
	        self.day_number = ko.computed(function () { return self.day().toString('d') });
	        self.day_name = ko.computed(function () { return self.day().toString('ddd') });
	        self.month_year = ko.computed(function () { return self.day().toString('MMM yyyy') });
	        self.month_name = ko.computed(function () { return self.day().toString('MMM').toLowerCase() });

	        // MODIFY VALUES
	        self.minus_week = function () {
	            var t = self.day();
	            self.day(t.add(-1).weeks());
	        };

	        self.plus_week = function () {
	            var t = self.day();
	            self.day(t.add(1).weeks());
	        };

	    }

	    function CalendarViewModel() {
	        var self = this;
	        self.first_day = Date.today();
	        self.last_day = Date.today().add(6).months();

	        self.weeks = ko.observable([]);
	        self.weeks_name = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];

	        self.rows = ko.observable(4);
	        self.cols = ko.observable(7);

	        //GENERATE WEEK DAYS (To be replace by $.getJSON('server/dates, function(){})'))
	        self.load_data =
			ko.computed(function () {
			    var today = new Date(self.first_day);
			    for (var j = 0; j < self.rows(); j++) {
			        var Days = [];
			        for (var i = 0; i < self.cols(); i++) {
			            if (!i && !j) Days[i] = new Day(new Date(today.add(0).days()), i, j);
			            else Days[i] = new Day(new Date(today.add(1).days()), i, j);
			        }
			        self.weeks()[j] = new Week(Days);
			    }
			});



	        self.prev_week = function () {
	            for (var j = 0; j < self.rows(); j++) {
	                for (var i = 0; i < self.cols(); i++) {
	                    self.weeks()[j].days()[i].minus_week();
	                }
	            }
	        };

	        self.next_week = function () {
	            for (var j = 0; j < self.rows(); j++) {
	                for (var i = 0; i < self.cols(); i++) {
	                    self.weeks()[j].days()[i].plus_week();
	                }
	            }
	        };

	        
	        self.add_week =  function() {
	        var last_day = self.weeks()[self.rows()-1].days()[self.cols()-1];
	        console.log(last_day.day_number());
	        };
	        


	    }

	    ko.applyBindings(new CalendarViewModel());
	</script>

  
</body>
</html>
